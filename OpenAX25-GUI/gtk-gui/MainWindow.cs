
// This file has been generated by the GUI designer. Do not modify.

public partial class MainWindow
{
	private global::Gtk.Notebook mainNotebook;
	private global::Gtk.ScrolledWindow shellWindow;
	private global::Gtk.TextView shellTextView;
	private global::Gtk.Label shellPageLabel;
	
	protected virtual void Build ()
	{
		global::Stetic.Gui.Initialize (this);
		// Widget MainWindow
		this.Name = "MainWindow";
		this.Title = global::Mono.Unix.Catalog.GetString ("OpenAX25 GUI");
		this.WindowPosition = ((global::Gtk.WindowPosition)(4));
		this.AllowShrink = true;
		// Container child MainWindow.Gtk.Container+ContainerChild
		this.mainNotebook = new global::Gtk.Notebook ();
		this.mainNotebook.CanFocus = true;
		this.mainNotebook.Name = "mainNotebook";
		this.mainNotebook.CurrentPage = 0;
		// Container child mainNotebook.Gtk.Notebook+NotebookChild
		this.shellWindow = new global::Gtk.ScrolledWindow ();
		this.shellWindow.CanFocus = true;
		this.shellWindow.Name = "shellWindow";
		this.shellWindow.ShadowType = ((global::Gtk.ShadowType)(1));
		// Container child shellWindow.Gtk.Container+ContainerChild
		this.shellTextView = new global::Gtk.TextView ();
		this.shellTextView.TooltipMarkup = "Window for command entry";
		this.shellTextView.CanFocus = true;
		this.shellTextView.Events = ((global::Gdk.EventMask)(2048));
		this.shellTextView.Name = "shellTextView";
		this.shellWindow.Add (this.shellTextView);
		this.mainNotebook.Add (this.shellWindow);
		// Notebook tab
		this.shellPageLabel = new global::Gtk.Label ();
		this.shellPageLabel.Name = "shellPageLabel";
		this.shellPageLabel.LabelProp = global::Mono.Unix.Catalog.GetString ("Shell");
		this.mainNotebook.SetTabLabel (this.shellWindow, this.shellPageLabel);
		this.shellPageLabel.ShowAll ();
		this.Add (this.mainNotebook);
		if ((this.Child != null)) {
			this.Child.ShowAll ();
		}
		this.DefaultWidth = 590;
		this.DefaultHeight = 429;
		this.Show ();
		this.DeleteEvent += new global::Gtk.DeleteEventHandler (this.OnDeleteEvent);
		this.shellTextView.KeyReleaseEvent += new global::Gtk.KeyReleaseEventHandler (this.OnShellTextViewKeyReleaseEvent);
	}
}
